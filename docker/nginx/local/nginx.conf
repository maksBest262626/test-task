# mail catcher
server {
    listen 80;
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name    mail.dester.dev;

    ssl_session_cache    shared:SSL:5m;
    ssl_session_timeout  5m;
    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;
    ssl_certificate /etc/nginx/ssl/dester.dev+4.pem;
    ssl_certificate_key /etc/nginx/ssl/dester.dev+4-key.pem;

    location / {
        proxy_pass http://127.0.0.1:<MAILHOG_PORT>;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        gzip off;
    }
}

# HTTP->HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name .dester.dev;

    return 308 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name .dester.dev;

    keepalive_timeout 1h;
    send_timeout 3600;
    proxy_connect_timeout 3600;
    proxy_read_timeout 3600;
    proxy_send_timeout 3600;
    fastcgi_read_timeout 3600;
    fastcgi_send_timeout 3600;

    proxy_buffer_size          128k;
    proxy_buffers            4 256k;
    proxy_busy_buffers_size    256k;
    fastcgi_buffer_size 32k;
    fastcgi_buffers 16 16k;


    ssl_session_cache    shared:SSL:5m;
    ssl_session_timeout  5m;

    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    # https://github.com/FiloSottile/mkcert
    # ставим корневой сертификат
    # mkcert -install
    # генерируем сертификат
    # mkcert dester.dev "*.dester.dev" localhost 127.0.0.1 ::1
    ssl_certificate /etc/nginx/ssl/dester.dev+4.pem;
    ssl_certificate_key /etc/nginx/ssl/dester.dev+4-key.pem;

    # Any error during the connection can be found on the following path
    error_log /var/log/nginx/error.log;

    location / {
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
        # proxy_ssl_session_reuse off;
        proxy_ignore_client_abort on;
        # proxy_pass_request_body on;
        # proxy_buffering off;
        proxy_redirect off;

        proxy_http_version 1.1;
        # proxy_set_header   "Connection" "";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://127.0.0.1:<NGINX_HOST_HTTP_PORT>;
        # proxy_redirect off;
    }
}
